name: CD

on:
  workflow_dispatch:
  # pull_request:
  #   branches: [ main, dev ]

env:
  TF_VERSION: '1.7.4'
  TF_WORKING_DIR: './terraform'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run az commands'
        run: |
          az account show
          az group list

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
      
      - name: Terraform Plan
        run: terraform plan -input=false -out=tf.plan
        env:
          TF_LOG: DEBUG
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Save Plan Output
        run: terraform show -no-color tf.plan > tfplan.txt
        working-directory: ${{ env.TF_WORKING_DIR }}
      
      - name: Terraform Apply
        run: terraform apply tf.plan -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}


    # - name: Update Deployment Image
    #   run: kubectl set image deployment/my-deployment my-container=myregistry.azurecr.io/my-image:${{ github.sha }} --namespace my-namespace
    
    # - name: Update Kubernetes Config
    #   run:  az aks get-credentials --name ${{ secrets.AKS_CLUSTER_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP_NAME }}

    # - name: Deploy to Kubernetes
    #   run: kubectl apply -f k8s/